class FirstSolution:
    def findTheDifference(self, s: str, t: str) -> str:
        """
        String t is generated by random shuffling string s and then add one more
        letter at a random position.

        Return the letter that was added to t.

        :param str s: string
        :param str t: shuffled string s with additional letter at random position
        :returns str letter: added letter to string t

        Time complexity: O(n)
        Space complexity: O(1)

        LeetCode: Beats 94.61%
        """
        a = collections.Counter(s)
        b = collections.Counter(t)

        for ch in b:
            if a[ch] == 0 or a[ch] != b[ch]:
                return ch


class SecondSolution:
    def findTheDifference(self, s: str, t: str) -> str:
        """
        :param str s: string
        :param str t: shuffled string s with additional letter at random position
        :returns str letter: added letter to string t

        Time complexity: O(n)
        Space complexity: O(1)

        LeetCode: Beats 99.41%
        """
        scores = {}

        for i in range(len(s)):
            scores[s[i]] = scores.get(s[i], 0) + 1
            scores[t[i]] = scores.get(t[i], 0) - 1

        scores[t[-1]] = scores.get(t[-1], 0) - 1

        for ch, score in scores.items():
            if score == -1:
                return ch
